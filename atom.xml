<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>大漠落霞</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tataqiuqiu.github.io/"/>
  <updated>2019-09-20T08:40:26.017Z</updated>
  <id>https://tataqiuqiu.github.io/</id>
  
  <author>
    <name>cuili</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sass常用方法</title>
    <link href="https://tataqiuqiu.github.io/2019/09/20/sass%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>https://tataqiuqiu.github.io/2019/09/20/sass常用方法/</id>
    <published>2019-09-20T08:30:00.000Z</published>
    <updated>2019-09-20T08:40:26.017Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、控制指令"><a href="#一、控制指令" class="headerlink" title="一、控制指令:"></a>一、控制指令:</h2><h3 id="1、-for-循环"><a href="#1、-for-循环" class="headerlink" title="1、@for 循环"></a>1、@for 循环</h3><p>@for $var from &lt;start&gt; through &lt;end&gt;</p><p>@for $var from &lt;start&gt; to &lt;end&gt;</p><p>当使用 through 时，条件范围包含 &lt;start&gt; 与 &lt;end&gt; 的值，而使用 to 时条件范围只包含 &lt;start&gt; 的值不包含 &lt;end&gt; 的值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">for</span> $i from <span class="number">1</span> through <span class="number">3</span> &#123;</span><br><span class="line">  .item-#&#123;$i&#125; &#123;</span><br><span class="line">    transform: rotate(($i * 30) * 1deg);</span><br><span class="line">    animation: load 1.2s linear (($i - 1) / 10) * 1s infinite;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>编译后</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item-1</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(30deg);</span><br><span class="line">  <span class="attribute">animation</span>: load <span class="number">1.2s</span> linear <span class="number">0s</span> infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-2</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(60deg);</span><br><span class="line">  <span class="attribute">animation</span>: load <span class="number">1.2s</span> linear <span class="number">0.1s</span> infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-3</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(90deg);</span><br><span class="line">  <span class="attribute">animation</span>: load <span class="number">1.2s</span> linear <span class="number">0.2s</span> infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、控制指令&quot;&gt;&lt;a href=&quot;#一、控制指令&quot; class=&quot;headerlink&quot; title=&quot;一、控制指令:&quot;&gt;&lt;/a&gt;一、控制指令:&lt;/h2&gt;&lt;h3 id=&quot;1、-for-循环&quot;&gt;&lt;a href=&quot;#1、-for-循环&quot; class=&quot;headerlink&quot; title=&quot;1、@for 循环&quot;&gt;&lt;/a&gt;1、@for 循环&lt;/h3&gt;&lt;p&gt;@for $var from &amp;lt;start&amp;gt; through &amp;lt;end&amp;gt;&lt;/p&gt;
&lt;p&gt;@for $var from &amp;lt;start&amp;gt; to &amp;lt;end&amp;gt;&lt;/p&gt;
&lt;p&gt;当使用 through 时，条件范围包含 &amp;lt;start&amp;gt; 与 &amp;lt;end&amp;gt; 的值，而使用 to 时条件范围只包含 &amp;lt;start&amp;gt; 的值不包含 &amp;lt;end&amp;gt; 的值&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; $i from &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; through &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .item-#&amp;#123;$i&amp;#125; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    transform: rotate(($i * 30) * 1deg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    animation: load 1.2s linear (($i - 1) / 10) * 1s infinite;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="css" scheme="https://tataqiuqiu.github.io/categories/css/"/>
    
      <category term="sass" scheme="https://tataqiuqiu.github.io/categories/css/sass/"/>
    
    
      <category term="sass" scheme="https://tataqiuqiu.github.io/tags/sass/"/>
    
  </entry>
  
  <entry>
    <title>开放封闭原则：1、装饰者模式</title>
    <link href="https://tataqiuqiu.github.io/2019/09/20/%E5%BC%80%E6%94%BE%E5%B0%81%E9%97%AD%E5%8E%9F%E5%88%99%EF%BC%9A1%E3%80%81%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>https://tataqiuqiu.github.io/2019/09/20/开放封闭原则：1、装饰者模式/</id>
    <published>2019-09-20T02:30:00.000Z</published>
    <updated>2019-09-20T09:00:36.141Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、通用方法"><a href="#1、通用方法" class="headerlink" title="1、通用方法"></a>1、通用方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.before = <span class="function"><span class="keyword">function</span>(<span class="params"> beforefn </span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> _self = <span class="keyword">this</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    beforefn.apply( <span class="keyword">this</span>, <span class="built_in">arguments</span> )</span><br><span class="line">    <span class="keyword">return</span> _self.apply( <span class="keyword">this</span>, <span class="built_in">arguments</span> )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Function</span>.prototype.after = <span class="function"><span class="keyword">function</span>(<span class="params"> afterfn </span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> _self = <span class="keyword">this</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> ret = _self.apply( <span class="keyword">this</span>, <span class="built_in">arguments</span> )</span><br><span class="line">    afterfn.apply( <span class="keyword">this</span>, <span class="built_in">arguments</span> )</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>不污染写法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> before = <span class="function"><span class="keyword">function</span> (<span class="params"> fn, beforefn </span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    beforefn.apply( <span class="keyword">this</span>, <span class="built_in">arguments</span> )</span><br><span class="line">    <span class="keyword">return</span> fn.apply( <span class="keyword">this</span>, <span class="built_in">arguments</span> )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> a = before(</span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="number">3</span>)&#125;,</span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="number">2</span>)&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">a = before(a, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="number">1</span>)&#125;)</span><br><span class="line">a()</span><br></pre></td></tr></table></figure><h2 id="2、例子：数据统计上报"><a href="#2、例子：数据统计上报" class="headerlink" title="2、例子：数据统计上报"></a>2、例子：数据统计上报</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> showLogin = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log( <span class="string">'打开登录浮层'</span> )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> log = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log( <span class="string">`上报标签为：<span class="subst">$&#123;<span class="keyword">this</span>.getAttribute( <span class="string">'tag'</span> )&#125;</span>`</span> )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">showLogin = showLogin.after( log )</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementById( <span class="string">'button'</span> ).onclick = shoLogin</span><br></pre></td></tr></table></figure><h2 id="3、例子：用-AOP-动态改变函数的参数"><a href="#3、例子：用-AOP-动态改变函数的参数" class="headerlink" title="3、例子：用 AOP 动态改变函数的参数"></a>3、例子：用 AOP 动态改变函数的参数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> func = <span class="function"><span class="params">param</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log( param )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func = func.before(<span class="function"><span class="params">param</span> =&gt;</span> &#123;</span><br><span class="line">  param.b = <span class="string">'b'</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">func( &#123;<span class="attr">a</span>: <span class="string">'a'</span>&#125; ) <span class="comment">// 输出：&#123;a: 'a', b: 'b'&#125;</span></span><br></pre></td></tr></table></figure><h2 id="4、例子：插件式的表单验证"><a href="#4、例子：插件式的表单验证" class="headerlink" title="4、例子：插件式的表单验证"></a>4、例子：插件式的表单验证</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.before = <span class="function"><span class="keyword">function</span>(<span class="params"> beforefn </span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> _self = <span class="keyword">this</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ( beforefn.apply( <span class="keyword">this</span>, <span class="built_in">arguments</span> ) === <span class="literal">false</span> ) &#123;</span><br><span class="line">      <span class="comment">// beforefn 返回 false 的情况直接 return , 不再执行后面的原函数</span></span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _self.apply( <span class="keyword">this</span>, <span class="built_in">arguments</span> )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> validata = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> ( username.value === <span class="string">''</span> ) &#123;</span><br><span class="line">    alert ( <span class="string">'用户名不能为空'</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( password.value === <span class="string">''</span> ) &#123;</span><br><span class="line">    alert ( <span class="string">'密码不能为空'</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> formSubmit = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> param = &#123;</span><br><span class="line">    username: username.value,</span><br><span class="line">    password: password.value</span><br><span class="line">  &#125;</span><br><span class="line">  ajax( <span class="string">'http://xxx.com/login'</span>, param )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">formSubmit = formSubmit.before( validata )</span><br><span class="line"></span><br><span class="line">submitBtn.onclick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  fromSubmit()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、注意"><a href="#5、注意" class="headerlink" title="5、注意"></a>5、注意</h2><p>被装饰过的函数，返回的实际上是一个新的函数，如果在原函数上保存了一些属性，那么这些属性会丢失。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> func = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  alert( <span class="number">1</span> )</span><br><span class="line">&#125;</span><br><span class="line">func.a = <span class="string">'a'</span></span><br><span class="line"></span><br><span class="line">func = func.after(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">  alert( <span class="number">2</span> )</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">alert( func.a ) <span class="comment">// 输出：undefined</span></span><br></pre></td></tr></table></figure><h2 id="6、装饰者模式与代理模式"><a href="#6、装饰者模式与代理模式" class="headerlink" title="6、装饰者模式与代理模式"></a>6、装饰者模式与代理模式</h2><p>最重要的区别是意图和设计目的。</p><p>在虚拟代理实现预图片加载的例子中，本体负责设置 img 节点的 src，代理则提供了预加载的功能，这看起来也是“加入行为”的一种方式，但这种方式和装饰者模式的偏重点不一样。装饰者模式是实实在在的为对象增加新的职责和行为，而代理模式的事情还是跟本体一样，最终都是设置src。但代理加入了一些“聪明”的功能，比如在图片真正加载好之前，先使用一张占位的loading图片反馈给客户。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、通用方法&quot;&gt;&lt;a href=&quot;#1、通用方法&quot; class=&quot;headerlink&quot; title=&quot;1、通用方法&quot;&gt;&lt;/a&gt;1、通用方法&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype.before = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt; beforefn &lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; _self = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    beforefn.apply( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _self.apply( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;.prototype.after = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt; afterfn &lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; _self = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ret = _self.apply( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    afterfn.apply( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="javascript" scheme="https://tataqiuqiu.github.io/categories/javascript/"/>
    
      <category term="代码优化" scheme="https://tataqiuqiu.github.io/categories/javascript/%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96/"/>
    
      <category term="设计模式" scheme="https://tataqiuqiu.github.io/categories/javascript/%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="the Open-Close" scheme="https://tataqiuqiu.github.io/tags/the-Open-Close/"/>
    
  </entry>
  
  <entry>
    <title>浏览器渲染原理</title>
    <link href="https://tataqiuqiu.github.io/2019/09/19/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/"/>
    <id>https://tataqiuqiu.github.io/2019/09/19/浏览器渲染原理/</id>
    <published>2019-09-19T10:00:00.000Z</published>
    <updated>2019-09-19T10:11:04.179Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、现代web开发"><a href="#1、现代web开发" class="headerlink" title="1、现代web开发"></a>1、现代web开发</h3><p><img src="/images/browser/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91.jpg" alt></p><a id="more"></a><h3 id="2、b-s系统架构图"><a href="#2、b-s系统架构图" class="headerlink" title="2、b-s系统架构图"></a>2、b-s系统架构图</h3><p><img src="/images/browser/b-s%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E5%9B%BE.jpg" alt></p><h3 id="3、http协议是无状态协议"><a href="#3、http协议是无状态协议" class="headerlink" title="3、http协议是无状态协议"></a>3、http协议是无状态协议</h3><p><img src="/images/browser/http%E5%8D%8F%E8%AE%AE%E6%98%AF%E6%97%A0%E7%8A%B6%E6%80%81%E5%8D%8F%E8%AE%AE.jpg" alt></p><h3 id="4、TCP三次握手"><a href="#4、TCP三次握手" class="headerlink" title="4、TCP三次握手"></a>4、TCP三次握手</h3><p><img src="/images/browser/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.jpg" alt></p><h3 id="5、建立TCP连接"><a href="#5、建立TCP连接" class="headerlink" title="5、建立TCP连接"></a>5、建立TCP连接</h3><p><img src="/images/browser/%E5%BB%BA%E7%AB%8BTCP%E8%BF%9E%E6%8E%A5.jpg" alt></p><h3 id="6、dns查询过程原理"><a href="#6、dns查询过程原理" class="headerlink" title="6、dns查询过程原理"></a>6、dns查询过程原理</h3><p><img src="/images/browser/dns%E6%9F%A5%E8%AF%A2%E8%BF%87%E7%A8%8B%E5%8E%9F%E7%90%86.jpg" alt></p><h3 id="7、dns解析"><a href="#7、dns解析" class="headerlink" title="7、dns解析"></a>7、dns解析</h3><p><img src="/images/browser/dns%E8%A7%A3%E6%9E%90.jpg" alt></p><h3 id="8、完整HTTP请求过程"><a href="#8、完整HTTP请求过程" class="headerlink" title="8、完整HTTP请求过程"></a>8、完整HTTP请求过程</h3><p><img src="/images/browser/%E5%AE%8C%E6%95%B4HTTP%E8%AF%B7%E6%B1%82%E8%BF%87%E7%A8%8B.jpg" alt></p><h3 id="9、浏览器缓存流程"><a href="#9、浏览器缓存流程" class="headerlink" title="9、浏览器缓存流程"></a>9、浏览器缓存流程</h3><p><img src="/images/browser/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%E6%B5%81%E7%A8%8B.jpg" alt></p><h3 id="10、浏览器性能优化"><a href="#10、浏览器性能优化" class="headerlink" title="10、浏览器性能优化"></a>10、浏览器性能优化</h3><p><img src="/images/browser/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、现代web开发&quot;&gt;&lt;a href=&quot;#1、现代web开发&quot; class=&quot;headerlink&quot; title=&quot;1、现代web开发&quot;&gt;&lt;/a&gt;1、现代web开发&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/browser/%E7%8E%B0%E4%BB%A3web%E5%BC%80%E5%8F%91.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="浏览器" scheme="https://tataqiuqiu.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="渲染原理" scheme="https://tataqiuqiu.github.io/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="browser" scheme="https://tataqiuqiu.github.io/tags/browser/"/>
    
  </entry>
  
  <entry>
    <title>两行文字带省略号ellipsis</title>
    <link href="https://tataqiuqiu.github.io/2019/08/19/ellipsis%E4%B8%A4%E8%A1%8C%E6%96%87%E5%AD%97%E7%9A%84%E7%9C%81%E7%95%A5%E5%8F%B7/"/>
    <id>https://tataqiuqiu.github.io/2019/08/19/ellipsis两行文字的省略号/</id>
    <published>2019-08-19T03:46:00.000Z</published>
    <updated>2019-09-20T08:43:45.831Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/css/ellipsis.png" alt></p><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"lastline-space-ellipsis js-toggle-box"</span> <span class="attr">title</span>=<span class="string">"你让我只 fdkfjkdsjfdsj dfjdsfadf 5555555 aaaaaa 显示2行就只显示2行啊，你让我只显示2行就只显示2行啊，你让我只显示2行就只显示2行啊"</span> &gt;</span></span><br><span class="line">  你让我只显示2行就只显示2行啊，你让我只显示2行就只显示2行啊，你让我只显示2行就只显示2行啊你让我只显示2行就只显示2行啊，你让我只显示2行就只显示2行啊，你让我只显示2行就只显示2行啊 </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.lastline-space-ellipsis</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">40px</span>; <span class="comment">/*用像素表示，不要用em，以免造成不同浏览器下计算出现小数点取舍不同导致1像素的差距【行高*截取行数】*/</span></span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word;</span><br><span class="line">  <span class="attribute">word-break</span>: break-all; <span class="comment">/*强制打散字符*/</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>; <span class="comment">/*同背景色*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.lastline-space-ellipsis</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.lastline-space-ellipsis</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>; <span class="comment">/*实际文本颜色*/</span></span><br><span class="line">  <span class="attribute">content</span>: <span class="built_in">attr</span>(title);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.lastline-space-ellipsis</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>; <span class="comment">/*显示在最上面，展示前面的(截取行数-1)行字符*/</span></span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">20px</span>; <span class="comment">/*根据行高和截取行数调整，值为[(截取行数-1)*行高]*/</span></span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>; <span class="comment">/*同背景色*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.lastline-space-ellipsis</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">  <span class="attribute">-webkit-box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">2</span>; <span class="comment">/*截取行数*/</span></span><br><span class="line">  <span class="attribute">text-indent</span>: -<span class="number">3em</span>; <span class="comment">/*行首缩进字符数，值为[-(截取行数-1)*尾部留空字符数]，取负值把每行多padding-right的部分给缩进回去*/</span></span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">3em</span>; <span class="comment">/*尾部留空字符数*/</span></span><br><span class="line">  <span class="comment">/*margin-left: -3em;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/css/ellipsis.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="css" scheme="https://tataqiuqiu.github.io/categories/css/"/>
    
      <category term="ellipsis" scheme="https://tataqiuqiu.github.io/categories/css/ellipsis/"/>
    
    
      <category term="css" scheme="https://tataqiuqiu.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>给github上的博客添加vue-cli搭建的demo</title>
    <link href="https://tataqiuqiu.github.io/2019/08/05/%E7%BB%99github%E4%B8%8A%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0vue-cli%E6%90%AD%E5%BB%BA%E7%9A%84demo/"/>
    <id>https://tataqiuqiu.github.io/2019/08/05/给github上的博客添加vue-cli搭建的demo/</id>
    <published>2019-08-05T11:00:00.000Z</published>
    <updated>2019-08-07T03:53:26.983Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下这个blog添加demo的过程</p><h2 id="一、创建一个新的github仓库。"><a href="#一、创建一个新的github仓库。" class="headerlink" title="一、创建一个新的github仓库。"></a>一、创建一个新的github仓库。</h2><h3 id="1、创建库，起名demos"><a href="#1、创建库，起名demos" class="headerlink" title="1、创建库，起名demos"></a>1、创建库，起名demos</h3><p><img src="/images/github%E6%96%B0%E5%BB%BA%E5%BA%93.png" alt></p><a id="more"></a><h3 id="2、打开settings"><a href="#2、打开settings" class="headerlink" title="2、打开settings"></a>2、打开settings</h3><p><img src="/images/github-settings.png" alt></p><h3 id="3、启用GitHub-Pages"><a href="#3、启用GitHub-Pages" class="headerlink" title="3、启用GitHub Pages"></a>3、启用GitHub Pages</h3><p><img src="/images/github%E5%BC%80%E5%90%AFpages.png" alt></p><h2 id="二、gitignore文件中-去掉-dist目录"><a href="#二、gitignore文件中-去掉-dist目录" class="headerlink" title="二、gitignore文件中 去掉/dist目录"></a>二、gitignore文件中 去掉/dist目录</h2><h2 id="三、vue-cli3-路径配置"><a href="#三、vue-cli3-路径配置" class="headerlink" title="三、vue-cli3 路径配置"></a>三、vue-cli3 路径配置</h2><h3 id="1、vue-config-js配置文件中的baseUrl改为相对路径。"><a href="#1、vue-config-js配置文件中的baseUrl改为相对路径。" class="headerlink" title="1、vue.config.js配置文件中的baseUrl改为相对路径。"></a>1、vue.config.js配置文件中的baseUrl改为相对路径。</h3><p>bulid后的文件静态资源引用就会以相对路径来引入了。<br>包括外链JS、css以及，html内的img标签。</p><p><img src="/images/vuecli3-config-baseurl.png" alt></p><h3 id="2、router路径更改"><a href="#2、router路径更改" class="headerlink" title="2、router路径更改"></a>2、router路径更改</h3><p>将base改为目标路径，跳转路由的位置就会以此为根目录进行跳转。</p><p><img src="/images/vuecli3-router-base.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一下这个blog添加demo的过程&lt;/p&gt;
&lt;h2 id=&quot;一、创建一个新的github仓库。&quot;&gt;&lt;a href=&quot;#一、创建一个新的github仓库。&quot; class=&quot;headerlink&quot; title=&quot;一、创建一个新的github仓库。&quot;&gt;&lt;/a&gt;一、创建一个新的github仓库。&lt;/h2&gt;&lt;h3 id=&quot;1、创建库，起名demos&quot;&gt;&lt;a href=&quot;#1、创建库，起名demos&quot; class=&quot;headerlink&quot; title=&quot;1、创建库，起名demos&quot;&gt;&lt;/a&gt;1、创建库，起名demos&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/github%E6%96%B0%E5%BB%BA%E5%BA%93.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="javascript" scheme="https://tataqiuqiu.github.io/categories/javascript/"/>
    
      <category term="vue" scheme="https://tataqiuqiu.github.io/categories/javascript/vue/"/>
    
      <category term="vue-cli" scheme="https://tataqiuqiu.github.io/categories/javascript/vue/vue-cli/"/>
    
    
      <category term="vue-cli" scheme="https://tataqiuqiu.github.io/tags/vue-cli/"/>
    
  </entry>
  
  <entry>
    <title>vue父子组件双向绑定</title>
    <link href="https://tataqiuqiu.github.io/2019/08/05/vue%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/"/>
    <id>https://tataqiuqiu.github.io/2019/08/05/vue父子组件双向绑定/</id>
    <published>2019-08-05T03:00:00.000Z</published>
    <updated>2019-09-20T08:44:43.007Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、sync修饰符（v2-3-0-新增）"><a href="#1、sync修饰符（v2-3-0-新增）" class="headerlink" title="1、sync修饰符（v2.3.0+ 新增）"></a>1、sync修饰符（v2.3.0+ 新增）</h3><p><a href="https://github.com/tataqiuqiu/demos/blob/master/vue/test/src/views/Bb.vue" target="_blank" rel="noopener">父组件代码</a>  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span> <span class="attr">:value.sync</span>=<span class="string">"doc"</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>father： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"doc"</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>result： <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">"doc"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Child <span class="keyword">from</span> <span class="string">"@/components/Bb-child.vue"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">"Bb"</span>,</span><br><span class="line">  components: &#123;</span><br><span class="line">    Child</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      doc: <span class="string">"输入试试"</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/tataqiuqiu/demos/blob/master/vue/test/src/components/Bb-child.vue" target="_blank" rel="noopener">子组件代码</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>child： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"val"</span> @<span class="attr">input</span>=<span class="string">"iptInput"</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">"Bb-child"</span>,</span><br><span class="line">  props: &#123;</span><br><span class="line">    value: <span class="built_in">String</span></span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      val: <span class="keyword">this</span>.value</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    value(newVal) &#123;</span><br><span class="line">      <span class="keyword">this</span>.val = newVal;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    iptInput() &#123;</span><br><span class="line">      <span class="keyword">this</span>.$emit(<span class="string">"update:value"</span>, <span class="keyword">this</span>.val);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="2、老版本"><a href="#2、老版本" class="headerlink" title="2、老版本"></a>2、老版本</h3><p><a href="https://github.com/tataqiuqiu/demos/blob/master/vue/test/src/views/Bb.2.vue" target="_blank" rel="noopener">父组件代码</a>  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span> <span class="attr">:value</span>=<span class="string">"doc"</span> @<span class="attr">input</span>=<span class="string">"oninput"</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>father： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"doc"</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>result： <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">"doc"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Child <span class="keyword">from</span> <span class="string">"@/components/Bb-child.2.vue"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">"Bb"</span>,</span><br><span class="line">  components: &#123;</span><br><span class="line">    Child</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      doc: <span class="string">"输入试试"</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    oninput(val) &#123;</span><br><span class="line">      <span class="keyword">this</span>.doc = val;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/tataqiuqiu/demos/blob/master/vue/test/src/components/Bb-child.2.vue" target="_blank" rel="noopener">子组件代码</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>child： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"val"</span> @<span class="attr">input</span>=<span class="string">"iptInput"</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">"Bb-child.2"</span>,</span><br><span class="line">  props: &#123;</span><br><span class="line">    value: <span class="built_in">String</span></span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      val: <span class="keyword">this</span>.value</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    value(newVal) &#123;</span><br><span class="line">      <span class="keyword">this</span>.val = newVal;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    iptInput() &#123;</span><br><span class="line">      <span class="keyword">this</span>.$emit(<span class="string">"input"</span>, <span class="keyword">this</span>.val);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、sync修饰符（v2-3-0-新增）&quot;&gt;&lt;a href=&quot;#1、sync修饰符（v2-3-0-新增）&quot; class=&quot;headerlink&quot; title=&quot;1、sync修饰符（v2.3.0+ 新增）&quot;&gt;&lt;/a&gt;1、sync修饰符（v2.3.0+ 新增）&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/tataqiuqiu/demos/blob/master/vue/test/src/views/Bb.vue&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;父组件代码&lt;/a&gt;  &lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;:value.sync&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doc&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;child&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;father： &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-model&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doc&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;result： &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-html&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;doc&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="javascript" scheme="https://tataqiuqiu.github.io/categories/javascript/"/>
    
      <category term="vue" scheme="https://tataqiuqiu.github.io/categories/javascript/vue/"/>
    
      <category term="组件" scheme="https://tataqiuqiu.github.io/categories/javascript/vue/%E7%BB%84%E4%BB%B6/"/>
    
    
      <category term="vue" scheme="https://tataqiuqiu.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue-test-utils测试用例常用方法</title>
    <link href="https://tataqiuqiu.github.io/2019/08/02/vue-test-utils%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>https://tataqiuqiu.github.io/2019/08/02/vue-test-utils测试用例常用方法/</id>
    <published>2019-08-02T10:00:00.000Z</published>
    <updated>2019-08-07T03:53:16.338Z</updated>
    
    <content type="html"><![CDATA[<p>测试用例，代码自动化监测，codereview的第一步。是个不应被忽视的环节。</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mount &#125; <span class="keyword">from</span> <span class="string">'@vue/test-utils'</span></span><br><span class="line"><span class="keyword">import</span> test <span class="keyword">from</span> <span class="string">'../index'</span> <span class="comment">// 引入组件</span></span><br><span class="line"><span class="keyword">const</span> wrapper = mount(test, &#123;</span><br><span class="line">  <span class="comment">// 添加属性</span></span><br><span class="line">  propsData: &#123;</span><br><span class="line">    type: <span class="string">'type_1'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 添加插片</span></span><br><span class="line">  slots: &#123;</span><br><span class="line">    <span class="keyword">default</span>: <span class="string">'&lt;div class="test-msg"&gt;&lt;/div&gt;'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> vm = wrapper.vm <span class="comment">// 组件实例</span></span><br><span class="line"></span><br><span class="line">it(<span class="string">'类名是否正确'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> container = wrapper.find(<span class="string">'.container'</span>)</span><br><span class="line">  expect(container.contains(<span class="string">'.class_1'</span>)).toBe(<span class="literal">true</span>)</span><br><span class="line">  expect(container.classes(<span class="string">'class_2'</span>)).toBe(<span class="literal">true</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">it(<span class="string">'触发click事件'</span>, () =&gt; &#123;</span><br><span class="line">  wrapper.trigger(<span class="string">'click'</span>)</span><br><span class="line">  expect(wrapper.emitted().click).toBeTruthy()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">it(<span class="string">'html内容检测'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> title = wrapper.find(<span class="string">'.title'</span>)</span><br><span class="line">  expect(title.text()).toBe(<span class="string">'标题'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> img = vm.$el.querySelector(<span class="string">'.img'</span>)</span><br><span class="line">  expect(img.src).toBe(<span class="string">'http://img'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">it(<span class="string">'样式检测'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> vm = vm.$el</span><br><span class="line">  expect(vm.style.width).toBe(<span class="string">'300px'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">it(<span class="string">'开启检测'</span>, () =&gt; &#123;</span><br><span class="line">  expect(wrapper.contains(<span class="string">'.detail'</span>)).toBe(<span class="literal">true</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">it(<span class="string">'插片位置是否正确'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> minor = wrapper.find(<span class="string">'.slot'</span>)</span><br><span class="line">  expect(minor.contains(<span class="string">'div.test-msg'</span>)).toBeTruthy()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;测试用例，代码自动化监测，codereview的第一步。是个不应被忽视的环节。&lt;/p&gt;
    
    </summary>
    
      <category term="javascript" scheme="https://tataqiuqiu.github.io/categories/javascript/"/>
    
      <category term="vue" scheme="https://tataqiuqiu.github.io/categories/javascript/vue/"/>
    
      <category term="test-utils" scheme="https://tataqiuqiu.github.io/categories/javascript/vue/test-utils/"/>
    
    
      <category term="vue-test-utils" scheme="https://tataqiuqiu.github.io/tags/vue-test-utils/"/>
    
  </entry>
  
  <entry>
    <title>hexo启动部署博客的命令</title>
    <link href="https://tataqiuqiu.github.io/2019/08/02/hexo%E5%90%AF%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%91%BD%E4%BB%A4/"/>
    <id>https://tataqiuqiu.github.io/2019/08/02/hexo启动部署博客的命令/</id>
    <published>2019-08-02T07:00:00.000Z</published>
    <updated>2019-08-07T03:53:07.819Z</updated>
    
    <content type="html"><![CDATA[<p>使用git bash工具</p><h2 id="本地目录"><a href="#本地目录" class="headerlink" title="本地目录"></a>本地目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ e: 00aa/blog</span><br></pre></td></tr></table></figure><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g </span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><h2 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用git bash工具&lt;/p&gt;
&lt;h2 id=&quot;本地目录&quot;&gt;&lt;a href=&quot;#本地目录&quot; class=&quot;headerlink&quot; title=&quot;本地目录&quot;&gt;&lt;/a&gt;本地目录&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ e: 00aa/blog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;本地预览&quot;&gt;&lt;a href=&quot;#本地预览&quot; class=&quot;headerlink&quot; title=&quot;本地预览&quot;&gt;&lt;/a&gt;本地预览&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo g &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;部署到github&quot;&gt;&lt;a href=&quot;#部署到github&quot; class=&quot;headerlink&quot; title=&quot;部署到github&quot;&gt;&lt;/a&gt;部署到github&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="博客相关" scheme="https://tataqiuqiu.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="hexo" scheme="https://tataqiuqiu.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>markdown参考</title>
    <link href="https://tataqiuqiu.github.io/2019/08/02/markdown%E5%8F%82%E8%80%83/"/>
    <id>https://tataqiuqiu.github.io/2019/08/02/markdown参考/</id>
    <published>2019-08-02T06:00:00.000Z</published>
    <updated>2019-08-07T07:30:10.046Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! <code>This</code> is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><p><img src="/images/github%E6%96%B0%E5%BB%BA%E5%BA%93.png" alt></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> screen and (max-width: <span class="number">640px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">body</span> &#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#f8f8f8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><div class="tip">    在ECMAScript 5的strict模式下，这种情况的`this`已经被规定不会指向全局对象了，而是`undefined`</div><ul><li><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! &lt;code&gt;This&lt;/code&gt; is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="博客相关" scheme="https://tataqiuqiu.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="markdown" scheme="https://tataqiuqiu.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
